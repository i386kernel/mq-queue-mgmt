name: MQ Queue Management

on:
  push:
    branches: [main]
    paths:
      - 'mqsc/**/*.mqsc'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod

env:
  MQ_NAMESPACE: ibm-mq-ns
  QMGR_NAME: secureapphelm

jobs:
  deploy-queues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup AWS and kubectl
        run: |
          # Install AWS CLI if not present
          if ! command -v aws &> /dev/null; then
            echo "Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -q awscliv2.zip
            sudo ./aws/install
          fi
          
          # Install kubectl if not present
          if ! command -v kubectl &> /dev/null; then
            echo "Installing kubectl..."
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi
          
          # Verify installations
          aws --version
          kubectl version --client --short
      
      - name: Configure AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Configure AWS credentials
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_DEFAULT_REGION
          
          # Verify configuration
          aws sts get-caller-identity
          
          # Update kubeconfig
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      
      - name: Get MQ Pod
        run: |
          MQ_POD=$(kubectl get pods -n ${{ env.MQ_NAMESPACE }} -o jsonpath='{.items[0].metadata.name}')
          echo "MQ_POD=$MQ_POD" >> $GITHUB_ENV
          echo "Found pod: $MQ_POD"
      
      - name: Apply Queues
        run: |
          ENV="${{ github.event.inputs.environment || 'dev' }}"
          
          for mqsc_file in ./mqsc/${ENV}/*.mqsc; do
            echo "Applying $(basename $mqsc_file)..."
            kubectl exec -i ${{ env.MQ_POD }} -n ${{ env.MQ_NAMESPACE }} -- \
              runmqsc ${{ env.QMGR_NAME }} < "$mqsc_file"
          done
      
      - name: List Queues
        if: always()
        run: |
          echo "Current queues:"
          kubectl exec -i ${{ env.MQ_POD }} -n ${{ env.MQ_NAMESPACE }} -- \
            bash -c "echo 'DISPLAY QLOCAL(*)' | runmqsc ${{ env.QMGR_NAME }}" || true